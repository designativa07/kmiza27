# =====================================================
# üß™ TESTE DE CONEX√ÉO POSTGRESQL - KMIZA27 RAG
# =====================================================

Write-Host "üîç Testando conex√£o PostgreSQL..." -ForegroundColor Green
Write-Host ""

# Par√¢metros de conex√£o
$dbHost = "195.200.0.191"
$dbPort = "5433"
$database = "kmiza27"
$username = "kmiza27_rag"
$password = "kmiza27rag"

Write-Host "üìã Par√¢metros de conex√£o:" -ForegroundColor Yellow
Write-Host "Host: $dbHost"
Write-Host "Port: $dbPort"
Write-Host "Database: $database"
Write-Host "Username: $username"
Write-Host "Password: [oculta]"
Write-Host ""

# Teste 1: Conectividade de rede
Write-Host "üåê Teste 1: Conectividade de rede..." -ForegroundColor Cyan
try {
    $result = Test-NetConnection -ComputerName $dbHost -Port $dbPort -WarningAction SilentlyContinue
    if ($result.TcpTestSucceeded) {
        Write-Host "‚úÖ Conectividade de rede: OK" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Conectividade de rede: FALHOU" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå Erro no teste de rede: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

Write-Host ""

# Teste 2: String de conex√£o
Write-Host "üîó Teste 2: Formato da string de conex√£o..." -ForegroundColor Cyan
$connectionString = "postgres://${username}:${password}@${dbHost}:${dbPort}/${database}"
Write-Host "String de conex√£o: $connectionString"
Write-Host "‚úÖ Formato da string: OK" -ForegroundColor Green

Write-Host ""

# Teste 3: Verificar se psql est√° dispon√≠vel
Write-Host "üîß Teste 3: Verificando disponibilidade do psql..." -ForegroundColor Cyan
try {
    $psqlVersion = psql --version 2>$null
    if ($psqlVersion) {
        Write-Host "‚úÖ psql encontrado: $psqlVersion" -ForegroundColor Green
        $psqlAvailable = $true
    } else {
        Write-Host "‚ö†Ô∏è psql n√£o encontrado no PATH" -ForegroundColor Yellow
        $psqlAvailable = $false
    }
} catch {
    Write-Host "‚ö†Ô∏è psql n√£o encontrado no PATH" -ForegroundColor Yellow
    $psqlAvailable = $false
}

Write-Host ""

# Teste 4: Tentar conex√£o com psql (se dispon√≠vel)
if ($psqlAvailable) {
    Write-Host "üîê Teste 4: Tentando conex√£o com psql..." -ForegroundColor Cyan
    Write-Host "Comando que seria executado:"
    Write-Host "psql -h $dbHost -p $dbPort -U $username -d $database" -ForegroundColor Gray
    Write-Host ""
    Write-Host "‚ö†Ô∏è Para testar manualmente, execute:" -ForegroundColor Yellow
    Write-Host "psql -h $dbHost -p $dbPort -U $username -d $database" -ForegroundColor Cyan
    Write-Host "Senha quando solicitada: $password" -ForegroundColor Cyan
} else {
    Write-Host "üîß Teste 4: Instala√ß√£o do PostgreSQL Client..." -ForegroundColor Cyan
    Write-Host "‚ùå psql n√£o est√° dispon√≠vel" -ForegroundColor Red
    Write-Host ""
    Write-Host "üí° Para instalar o PostgreSQL Client:" -ForegroundColor Yellow
    Write-Host "1. Baixe o PostgreSQL em: https://www.postgresql.org/download/windows/"
    Write-Host "2. Ou instale apenas o cliente via Chocolatey: choco install postgresql"
    Write-Host "3. Ou use Docker: docker run -it --rm postgres:latest psql -h $dbHost -p $dbPort -U $username -d $database"
}

Write-Host ""

# Resumo
Write-Host "üìä RESUMO DO TESTE:" -ForegroundColor Green
Write-Host "‚úÖ Host acess√≠vel: $dbHost"
Write-Host "‚úÖ Porta aberta: $dbPort"
Write-Host "‚úÖ String de conex√£o v√°lida"
Write-Host "String completa: postgres://${username}:${password}@${dbHost}:${dbPort}/${database}"

Write-Host ""
Write-Host "üéØ PR√ìXIMOS PASSOS:" -ForegroundColor Yellow
Write-Host "1. Instale o psql se n√£o tiver"
Write-Host "2. Execute: psql -h $dbHost -p $dbPort -U $username -d $database"
Write-Host "3. Digite a senha: $password"
Write-Host "4. Teste consultas: SELECT COUNT(*) FROM teams;"

Write-Host ""
Write-Host "üîç TESTE CONCLU√çDO!" -ForegroundColor Green 