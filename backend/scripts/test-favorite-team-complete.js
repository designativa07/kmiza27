const axios = require('axios');

const BASE_URL = 'http://localhost:3000';
const TEST_PHONE = '5511999999999';

async function testFavoriteTeamComplete() {
  console.log('üß™ Teste Completo da Funcionalidade de Time Favorito\n');

  try {
    // 1. Testar defini√ß√£o de time favorito
    console.log('1Ô∏è‚É£ Testando defini√ß√£o de time favorito...');
    const setResponse = await axios.post(`${BASE_URL}/chatbot/test-message`, {
      message: 'CMD_DEFINIR_TIME_FAVORITO',
      phoneNumber: TEST_PHONE
    });
    console.log('‚úÖ Resposta:', typeof setResponse.data === 'string' ? setResponse.data.substring(0, 100) + '...' : JSON.stringify(setResponse.data).substring(0, 100) + '...');

    // 2. Simular resposta do usu√°rio com nome do time
    console.log('\n2Ô∏è‚É£ Simulando resposta do usu√°rio...');
    const teamResponse = await axios.post(`${BASE_URL}/chatbot/test-message`, {
      message: 'Flamengo',
      phoneNumber: TEST_PHONE
    });
    console.log('‚úÖ Resposta:', typeof teamResponse.data === 'string' ? teamResponse.data.substring(0, 100) + '...' : JSON.stringify(teamResponse.data).substring(0, 100) + '...');

    // 3. Testar resumo do time favorito
    console.log('\n3Ô∏è‚É£ Testando resumo do time favorito...');
    const summaryResponse = await axios.post(`${BASE_URL}/chatbot/test-message`, {
      message: 'CMD_MEU_TIME_FAVORITO',
      phoneNumber: TEST_PHONE
    });
    console.log('‚úÖ Resposta:', typeof summaryResponse.data === 'string' ? summaryResponse.data.substring(0, 100) + '...' : JSON.stringify(summaryResponse.data).substring(0, 100) + '...');

    // 4. Testar altera√ß√£o de time favorito
    console.log('\n4Ô∏è‚É£ Testando altera√ß√£o de time favorito...');
    const changeResponse = await axios.post(`${BASE_URL}/chatbot/test-message`, {
      message: 'CMD_ALTERAR_TIME_FAVORITO',
      phoneNumber: TEST_PHONE
    });
    console.log('‚úÖ Resposta:', typeof changeResponse.data === 'string' ? changeResponse.data.substring(0, 100) + '...' : JSON.stringify(changeResponse.data).substring(0, 100) + '...');

    // 5. Simular nova resposta do usu√°rio
    console.log('\n5Ô∏è‚É£ Simulando nova resposta do usu√°rio...');
    const newTeamResponse = await axios.post(`${BASE_URL}/chatbot/test-message`, {
      message: 'Palmeiras',
      phoneNumber: TEST_PHONE
    });
    console.log('‚úÖ Resposta:', typeof newTeamResponse.data === 'string' ? newTeamResponse.data.substring(0, 100) + '...' : JSON.stringify(newTeamResponse.data).substring(0, 100) + '...');

    // 6. Testar remo√ß√£o de time favorito
    console.log('\n6Ô∏è‚É£ Testando remo√ß√£o de time favorito...');
    const removeResponse = await axios.post(`${BASE_URL}/chatbot/test-message`, {
      message: 'CMD_REMOVER_TIME_FAVORITO',
      phoneNumber: TEST_PHONE
    });
    console.log('‚úÖ Resposta:', typeof removeResponse.data === 'string' ? removeResponse.data.substring(0, 100) + '...' : JSON.stringify(removeResponse.data).substring(0, 100) + '...');

    console.log('\nüéâ Todos os testes completados com sucesso!');
    console.log('\nüì± Agora voc√™ pode usar no WhatsApp:');
    console.log('   - Digite "menu" para ver as op√ß√µes');
    console.log('   - Procure pela se√ß√£o "‚ù§Ô∏è Meu Time Favorito"');
    console.log('   - Teste os comandos dispon√≠veis');

  } catch (error) {
    console.error('‚ùå Erro durante os testes:', error.response?.data || error.message);
  }
}

// Executar testes
testFavoriteTeamComplete(); 