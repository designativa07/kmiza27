const axios = require('axios');

async function testAcademyEndpoint() {
  try {
    console.log('üß™ Testando endpoint da academia...\n');

    // 1. Testar endpoint de teste
    console.log('üîç Testando endpoint /test...');
    try {
      const testResponse = await axios.get('http://localhost:3004/api/v2/academy/test');
      console.log('‚úÖ Endpoint /test funcionando:', testResponse.data);
    } catch (error) {
      console.log('‚ùå Endpoint /test falhou:', error.message);
    }

    // 2. Testar endpoint overview sem teamId
    console.log('\nüîç Testando endpoint /overview sem teamId...');
    try {
      const overviewResponse = await axios.get('http://localhost:3004/api/v2/academy/overview');
      console.log('‚úÖ Endpoint /overview funcionando:', overviewResponse.data);
    } catch (error) {
      if (error.response) {
        console.log('‚úÖ Endpoint /overview retornou erro esperado (sem teamId):', error.response.data);
      } else {
        console.log('‚ùå Endpoint /overview falhou:', error.message);
      }
    }

    // 3. Testar endpoint overview com teamId inv√°lido
    console.log('\nüîç Testando endpoint /overview com teamId inv√°lido...');
    try {
      const overviewResponse = await axios.get('http://localhost:3004/api/v2/academy/overview?teamId=invalid-uuid');
      console.log('‚úÖ Endpoint /overview funcionando:', overviewResponse.data);
    } catch (error) {
      if (error.response) {
        console.log('‚úÖ Endpoint /overview retornou erro esperado (UUID inv√°lido):', error.response.data);
      } else {
        console.log('‚ùå Endpoint /overview falhou:', error.message);
      }
    }

    // 4. Testar endpoint overview com teamId v√°lido (se houver)
    console.log('\nüîç Testando endpoint /overview com teamId v√°lido...');
    try {
      // UUID v√°lido de exemplo
      const validTeamId = '26a70149-b8f0-4e44-a096-7243a8e26d08';
      const overviewResponse = await axios.get(`http://localhost:3004/api/v2/academy/overview?teamId=${validTeamId}`);
      console.log('‚úÖ Endpoint /overview funcionando com teamId v√°lido:', overviewResponse.data);
    } catch (error) {
      if (error.response) {
        console.log('‚ö†Ô∏è Endpoint /overview retornou erro:', error.response.data);
        console.log('   Status:', error.response.status);
      } else {
        console.log('‚ùå Endpoint /overview falhou:', error.message);
      }
    }

    console.log('\nüéâ Teste dos endpoints conclu√≠do!');

  } catch (error) {
    console.error('‚ùå Erro durante o teste:', error);
  } finally {
    process.exit(0);
  }
}

// Executar teste
testAcademyEndpoint().catch(console.error);
