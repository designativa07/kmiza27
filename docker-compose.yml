version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://admin:password@postgres:5432/kmiza27_db
      - EVOLUTION_API_BASE_URL=http://evolution-api:8080
      - EVOLUTION_API_GLOBAL_KEY=your-global-key
    depends_on:
      - postgres
    volumes:
      - uploads_data:/app/uploads  # Volume persistente para uploads
    networks:
      - kmiza-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3002:3002"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000
    depends_on:
      - backend
    networks:
      - kmiza-network

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: kmiza27_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kmiza-network

  evolution-api:
    image: atendai/evolution-api:v2.1.1
    ports:
      - "8080:8080"
    environment:
      - DATABASE_ENABLED=true
      - DATABASE_CONNECTION_URI=postgresql://admin:password@postgres:5432/evolution_db
      - DATABASE_CONNECTION_CLIENT_NAME=evolution_db
      - CACHE_REDIS_ENABLED=false
      - WEBSOCKET_ENABLED=true
      - CONFIG_SESSION_PHONE_CLIENT=Kmiza27Bot
      - CONFIG_SESSION_PHONE_NAME=Kmiza27
      - QRCODE_LIMIT=10
      - AUTHENTICATION_TYPE=apikey
      - AUTHENTICATION_API_KEY=your-api-key-here
      - AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES=true
      - WEBHOOK_GLOBAL_URL=http://backend:3000/webhook/evolution
      - WEBHOOK_GLOBAL_ENABLED=true
      - WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS=false
    depends_on:
      - postgres
    networks:
      - kmiza-network

volumes:
  postgres_data:
  uploads_data:  # Volume para persistir uploads

networks:
  kmiza-network:
    driver: bridge 