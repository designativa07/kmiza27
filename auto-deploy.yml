# üöÄ Configura√ß√£o de Auto-Deploy para VPS
# Este arquivo pode ser usado pelo sistema de auto-deploy da sua VPS

name: Auto Deploy Kmiza Bot

# Configura√ß√µes do deploy
deploy:
  # For√ßar rebuild sempre
  force_rebuild: true
  
  # Limpar cache antes do build
  clear_cache: true
  
  # Comandos de pre-deploy
  pre_deploy:
    - echo "üî• Iniciando auto-deploy com cache busting..."
    - export CACHEBUST=$(date +%s)
    - export BUILD_TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)
    - export GITHUB_SHA=$(git rev-parse HEAD 2>/dev/null || echo "unknown")
    - echo "Cache buster: $CACHEBUST"
    - echo "Build timestamp: $BUILD_TIMESTAMP"
    - echo "GitHub SHA: $GITHUB_SHA"

  # Comandos de build
  build:
    - docker-compose down --remove-orphans || true
    - docker system prune -f || true
    - docker image prune -a -f || true
    - docker-compose build --no-cache --pull --parallel
    
  # Comandos de deploy
  deploy:
    - docker-compose up -d
    - sleep 30
    
  # Comandos de post-deploy
  post_deploy:
    - echo "üîç Verificando status dos servi√ßos..."
    - docker-compose ps
    - echo "üìä Verificando logs..."
    - docker-compose logs --tail=5 backend
    - docker-compose logs --tail=5 frontend
    - echo "üè• Testando health checks..."
    - curl -f http://localhost:3000/health || echo "Backend health check failed"
    - curl -f http://localhost:3002/api/health || echo "Frontend health check failed"
    - echo "‚úÖ Auto-deploy conclu√≠do!"

# Vari√°veis de ambiente para o build
environment:
  NODE_ENV: production
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

# Configura√ß√µes espec√≠ficas do Docker
docker:
  # Sempre usar --no-cache
  no_cache: true
  
  # Sempre fazer pull das imagens base
  pull: true
  
  # Build em paralelo
  parallel: true
  
  # Remover containers √≥rf√£os
  remove_orphans: true

# Configura√ß√µes de timeout
timeouts:
  build: 600  # 10 minutos
  deploy: 300 # 5 minutos
  health_check: 60 # 1 minuto

# Configura√ß√µes de retry
retry:
  max_attempts: 3
  delay: 30 # segundos

# Notifica√ß√µes (opcional)
notifications:
  on_success: "‚úÖ Deploy realizado com sucesso! Commit: ${GITHUB_SHA}"
  on_failure: "‚ùå Falha no deploy! Verifique os logs." 