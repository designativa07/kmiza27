# 🎨 Dockerfile Frontend Otimizado - Easypanel Compatible
# Multi-stage build otimizado

# Stage 1: Dependencies
FROM node:18-alpine AS deps
RUN apk add --no-cache libc6-compat

WORKDIR /app

# Copiar package files
COPY frontend/package*.json ./
RUN npm install --legacy-peer-deps

# Stage 2: Builder
FROM node:18-alpine AS builder
WORKDIR /app

# Instalar git para capturar commit
RUN apk add --no-cache git

# Copiar contexto para detectar commit
COPY . ./project-root/

# Detectar commit e definir variáveis
RUN cd project-root && \
    GIT_COMMIT_DETECTED=$(git rev-parse HEAD 2>/dev/null | cut -c1-8 || echo "e8316d9") && \
    BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ") && \
    echo "🔍 Git Commit detectado: $GIT_COMMIT_DETECTED" && \
    echo "⏰ Build Time: $BUILD_TIME" && \
    echo "export GIT_COMMIT=\"$GIT_COMMIT_DETECTED\"" > /tmp/build-vars.sh && \
    echo "export BUILD_TIMESTAMP=\"$BUILD_TIME\"" >> /tmp/build-vars.sh

# Copiar dependências do stage anterior
COPY --from=deps /app/node_modules ./node_modules
COPY frontend ./

# Definir variáveis de build
ARG NEXT_PUBLIC_API_URL=https://kmizabot.h4xd66.easypanel.host
ENV NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL
ENV NODE_ENV=production
ENV DISABLE_ESLINT_PLUGIN=true

# Aplicar variáveis detectadas e fazer build
RUN . /tmp/build-vars.sh && \
    export GIT_COMMIT && \
    export BUILD_TIMESTAMP && \
    echo "🚀 Fazendo build com:" && \
    echo "  Commit: $GIT_COMMIT" && \
    echo "  API URL: $NEXT_PUBLIC_API_URL" && \
    echo "  Build Time: $BUILD_TIMESTAMP" && \
    npm run build

# Stage 3: Runner
FROM node:18-alpine AS runner
WORKDIR /app

# Instalar dependências de runtime
RUN apk add --no-cache curl dumb-init

# Criar usuário não-root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copiar arquivos necessários do build
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=builder --chown=nextjs:nodejs /tmp/build-vars.sh ./

# Criar pasta public (Next.js precisa dela mesmo se vazia)
RUN mkdir -p ./public

# Configurar variáveis de runtime
RUN . ./build-vars.sh && \
    echo "GIT_COMMIT=$GIT_COMMIT" >> .env.production.local && \
    echo "BUILD_TIMESTAMP=$BUILD_TIMESTAMP" >> .env.production.local && \
    echo "🚀 Runtime configurado:" && \
    echo "  Commit: $GIT_COMMIT" && \
    echo "  Build Time: $BUILD_TIMESTAMP"

ENV NODE_ENV=production
ENV PORT=3002
ENV HOSTNAME="0.0.0.0"

# Configurar usuário
USER nextjs

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:3002/api/health || exit 1

# Expor porta
EXPOSE 3002

# Iniciar aplicação
CMD ["node", "server.js"] 