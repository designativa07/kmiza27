# ðŸŽ¨ Dockerfile Frontend Ultra-Simplificado
# Foco apenas na captura correta do commit

# Stage 1: Build Info
FROM alpine/git AS git-info
WORKDIR /app
RUN git clone https://github.com/designativa07/kmiza27.git repo
RUN cd repo && \
    echo "$(git rev-parse HEAD)" > /commit && \
    echo "$(date -u +%Y-%m-%dT%H:%M:%SZ)" > /timestamp && \
    echo "Git Commit: $(cat /commit)" && \
    echo "Build Time: $(cat /timestamp)"

# Stage 2: Dependencies  
FROM node:18-alpine AS deps
WORKDIR /app
COPY frontend/package*.json ./
RUN npm install --legacy-peer-deps

# Stage 3: Builder
FROM node:18-alpine AS builder
WORKDIR /app

# Copiar informaÃ§Ãµes de build
COPY --from=git-info /commit /commit
COPY --from=git-info /timestamp /timestamp
COPY --from=deps /app/node_modules ./node_modules
COPY frontend ./

# Configurar variÃ¡veis para build
ENV NEXT_PUBLIC_API_URL=https://kmizabot.h4xd66.easypanel.host
ENV NODE_ENV=production

# Build com variÃ¡veis capturadas
RUN export GIT_COMMIT=$(cat /commit) && \
    export BUILD_TIMESTAMP=$(cat /timestamp) && \
    echo "Building with commit: $GIT_COMMIT" && \
    echo "Building with timestamp: $BUILD_TIMESTAMP" && \
    npm run build

# Stage 4: Runtime
FROM node:18-alpine AS runner
WORKDIR /app

# Instalar curl para health check
RUN apk add --no-cache curl

# Criar usuÃ¡rio
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copiar build e informaÃ§Ãµes
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=git-info /commit /commit
COPY --from=git-info /timestamp /timestamp

# Configurar variÃ¡veis de ambiente no runtime
ENV NODE_ENV=production
ENV PORT=3002
ENV HOSTNAME=0.0.0.0

# Script de inicializaÃ§Ã£o simples
RUN echo '#!/bin/sh' > /start.sh && \
    echo 'export GIT_COMMIT=$(cat /commit)' >> /start.sh && \
    echo 'export BUILD_TIMESTAMP=$(cat /timestamp)' >> /start.sh && \
    echo 'echo "ðŸš€ Starting frontend with commit: $GIT_COMMIT"' >> /start.sh && \
    echo 'exec node server.js' >> /start.sh && \
    chmod +x /start.sh && \
    chown nextjs:nodejs /start.sh

USER nextjs

HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:3002/api/health || exit 1

EXPOSE 3002

CMD ["/start.sh"] 