# üê≥ Dockerfile Otimizado para Produ√ß√£o - kmiza27-chatbot
# Multi-stage build para reduzir tamanho da imagem

# ==========================================
# Stage 1: Build Dependencies
# ==========================================
FROM node:18-alpine AS dependencies

# Instalar depend√™ncias do sistema
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    libc6-compat

# Definir diret√≥rio de trabalho
WORKDIR /app

# Copiar arquivos de depend√™ncias
COPY package*.json ./
COPY yarn.lock* ./

# Instalar depend√™ncias
RUN npm ci --only=production && npm cache clean --force

# ==========================================
# Stage 2: Build Application
# ==========================================
FROM node:18-alpine AS builder

# Instalar depend√™ncias do sistema
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    libc6-compat

WORKDIR /app

# Copiar depend√™ncias da stage anterior
COPY --from=dependencies /app/node_modules ./node_modules

# Copiar c√≥digo fonte
COPY . .

# Build da aplica√ß√£o
RUN npm run build

# ==========================================
# Stage 3: Production Runtime
# ==========================================
FROM node:18-alpine AS production

# Instalar depend√™ncias m√≠nimas para runtime
RUN apk add --no-cache \
    dumb-init \
    curl \
    && addgroup -g 1001 -S nodejs \
    && adduser -S nestjs -u 1001

# Definir diret√≥rio de trabalho
WORKDIR /app

# Copiar depend√™ncias de produ√ß√£o
COPY --from=dependencies --chown=nestjs:nodejs /app/node_modules ./node_modules

# Copiar aplica√ß√£o buildada
COPY --from=builder --chown=nestjs:nodejs /app/dist ./dist
COPY --from=builder --chown=nestjs:nodejs /app/package*.json ./

# Copiar arquivos necess√°rios
COPY --chown=nestjs:nodejs database/ ./database/

# Criar diret√≥rios necess√°rios
RUN mkdir -p /app/logs && chown nestjs:nodejs /app/logs

# Configurar usu√°rio n√£o-root
USER nestjs

# Expor porta
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Usar dumb-init para gerenciar processos
ENTRYPOINT ["dumb-init", "--"]

# Comando para iniciar a aplica√ß√£o
CMD ["node", "dist/main.js"] 