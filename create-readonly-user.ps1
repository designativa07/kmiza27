# =====================================================
# üîß SCRIPT PARA CRIAR USU√ÅRIO READONLY - KMIZA27 DB
# =====================================================

Write-Host "üîê Criando usu√°rio readonly para banco kmiza27..." -ForegroundColor Green

# Configura√ß√µes do banco
$DB_HOST = "h4xd66.easypanel.host"
$DB_PORT = "5432"
$DB_NAME = "kmiza27"
$DB_ADMIN_USER = "postgres"  # ou o usu√°rio admin que voc√™ usa
$READONLY_USER = "kmiza27_readonly"

# Solicitar senha do admin
Write-Host "üìù Digite a senha do usu√°rio administrador ($DB_ADMIN_USER):" -ForegroundColor Yellow
$ADMIN_PASSWORD = Read-Host -AsSecureString
$ADMIN_PASSWORD_TEXT = [Runtime.InteropServices.Marshal]::PtrToStringAuto([Runtime.InteropServices.Marshal]::SecureStringToBSTR($ADMIN_PASSWORD))

# Solicitar senha para o novo usu√°rio readonly
Write-Host "üìù Digite a senha para o novo usu√°rio readonly ($READONLY_USER):" -ForegroundColor Yellow
$READONLY_PASSWORD = Read-Host -AsSecureString
$READONLY_PASSWORD_TEXT = [Runtime.InteropServices.Marshal]::PtrToStringAuto([Runtime.InteropServices.Marshal]::SecureStringToBSTR($READONLY_PASSWORD))

# Criar arquivo SQL tempor√°rio com a senha
$SQL_CONTENT = @"
-- Criar usu√°rio readonly
CREATE USER $READONLY_USER WITH PASSWORD '$READONLY_PASSWORD_TEXT';

-- Conceder permiss√µes b√°sicas
GRANT CONNECT ON DATABASE $DB_NAME TO $READONLY_USER;

-- Conectar ao banco para configurar permiss√µes de schema
\c $DB_NAME;

-- Configurar permiss√µes de leitura
GRANT USAGE ON SCHEMA public TO $READONLY_USER;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO $READONLY_USER;
GRANT SELECT ON ALL SEQUENCES IN SCHEMA public TO $READONLY_USER;

-- Configurar permiss√µes padr√£o para objetos futuros
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO $READONLY_USER;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON SEQUENCES TO $READONLY_USER;

-- Verificar cria√ß√£o
SELECT 'Usu√°rio criado com sucesso!' as status;
SELECT usename, usesuper, usecreatedb, usecanlogin FROM pg_user WHERE usename = '$READONLY_USER';
"@

# Salvar SQL em arquivo tempor√°rio
$TEMP_SQL = "temp_create_readonly.sql"
$SQL_CONTENT | Out-File -FilePath $TEMP_SQL -Encoding UTF8

try {
    Write-Host "üöÄ Executando cria√ß√£o do usu√°rio..." -ForegroundColor Cyan
    
    # Definir vari√°vel de ambiente para senha
    $env:PGPASSWORD = $ADMIN_PASSWORD_TEXT
    
    # Executar SQL
    $result = psql -h $DB_HOST -p $DB_PORT -U $DB_ADMIN_USER -d postgres -f $TEMP_SQL 2>&1
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Usu√°rio readonly criado com sucesso!" -ForegroundColor Green
        Write-Host ""
        Write-Host "üìã Informa√ß√µes de conex√£o:" -ForegroundColor Yellow
        Write-Host "Host: $DB_HOST"
        Write-Host "Port: $DB_PORT"
        Write-Host "Database: $DB_NAME"
        Write-Host "Username: $READONLY_USER"
        Write-Host "Password: [a senha que voc√™ definiu]"
        Write-Host ""
        Write-Host "üîó String de conex√£o:"
        Write-Host "postgresql://${READONLY_USER}:[senha]@${DB_HOST}:${DB_PORT}/${DB_NAME}" -ForegroundColor Cyan
        Write-Host ""
        Write-Host "üß™ Teste de conex√£o:"
        Write-Host "psql -h $DB_HOST -p $DB_PORT -U $READONLY_USER -d $DB_NAME" -ForegroundColor Cyan
    } else {
        Write-Host "‚ùå Erro ao criar usu√°rio:" -ForegroundColor Red
        Write-Host $result
    }
} catch {
    Write-Host "‚ùå Erro ao executar script: $($_.Exception.Message)" -ForegroundColor Red
} finally {
    # Limpar arquivo tempor√°rio
    if (Test-Path $TEMP_SQL) {
        Remove-Item $TEMP_SQL -Force
    }
    
    # Limpar vari√°vel de ambiente
    Remove-Item Env:PGPASSWORD -ErrorAction SilentlyContinue
}

Write-Host ""
Write-Host "üîí Permiss√µes do usu√°rio readonly:" -ForegroundColor Yellow
Write-Host "‚úÖ SELECT em todas as tabelas"
Write-Host "‚úÖ SELECT em todas as sequ√™ncias"
Write-Host "‚úÖ Conex√£o ao banco $DB_NAME"
Write-Host "‚ùå INSERT, UPDATE, DELETE (bloqueado)"
Write-Host "‚ùå CREATE, DROP, ALTER (bloqueado)"
Write-Host "‚ùå Permiss√µes administrativas (bloqueado)" 